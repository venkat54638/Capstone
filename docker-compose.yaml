version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_db_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: TaRMmOGsdbfte6xMv8OcPl8KNFU0qT_c4rjcsK44F2A=
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    entrypoint: >
      /bin/bash -c "
      airflow db migrate &&
      airflow users create --username admin --firstname admin --lastname admin --role Admin --email admin@example.com --password admin &&
      airflow db upgrade
      "
    depends_on:
      postgres:
        condition: service_healthy

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow_webserver
    restart: always
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: TaRMmOGsdbfte6xMv8OcPl8KNFU0qT_c4rjcsK44F2A=
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
    command: webserver
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow_scheduler
    restart: always
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: TaRMmOGsdbfte6xMv8OcPl8KNFU0qT_c4rjcsK44F2A=
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
    command: scheduler
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgres_db_volume: